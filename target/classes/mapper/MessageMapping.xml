<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性是名称空间，必须唯一 -->
<mapper namespace="com.edu.victor.Dao.MessageDao">
    <resultMap id="MessagesMap" type="Page">
        <collection property="pageData" ofType="Message" autoMapping="true"/>
    </resultMap>
    <insert id="addMessage" useGeneratedKeys="true" keyProperty="id" parameterType="message">
        insert into message(content_id,content,category,name,time)value(#{contentId},#{content},#{category},#{name},#{time});
    </insert>
    <insert id="addMsgUser" parameterType="Message">
        insert into msg_user(msg_id,target_id,is_teacher)value<foreach collection="list" item="item" index="index" separator="," >
            (#{item.msgId},#{item.targetId},#{item.isTeacher})
        </foreach>
    </insert>
    <delete id="deleteMessage">
        delete from message where content_id = #{0} and category = #{1}
    </delete>

    <select id="getUserMessagesByPage" resultMap="MessagesMap">
        select msg_user.id,`name`,`read` as isRead,content_id,content,category,`time` from message join msg_user on msg_id = message.id where msg_user.is_teacher = #{filter.isTeacher} and msg_user.target_id = #{filter.targetId} order by msg_user.`read`,`time` desc
    </select>
    <select id="getUnreadMessageNum" resultType="Integer">
        select count(id) from msg_user where target_id = #{targetId} and `read` = '0' and is_teacher = #{isTeacher};
    </select>

    <update id="setAlreadyRead">
        update msg_user set `read` = '1' where target_id = #{targetId} and `read` = '0' and is_teacher = #{isTeacher} and msg_id in
        <foreach collection="MessageList" item="item" open="(" close=")" separator=",">
            #{item.id}
        </foreach>
    </update>
    <select id="getContentId" resultType="String">
        select content_id from msg_user join message on msg_user.msg_id = message.id and msg_user.id = #{id};
    </select>

    <select id="getMsgUserIdList" resultType="Integer">
        select msg_user.id from msg_user join message on msg_user.msg_id = message.id where msg_user.target_id = #{targetId} and message.content_id = #{contentId} and  msg_user.is_teacher = #{isTeacher} and msg_user.read = 0;
    </select>
    <update id="markAsRead" parameterType="map">
        update msg_user set `read` = 1 where id in
        <foreach collection="idList" separator="," item="item" index="index" open="(" close=")">
            #{item}
        </foreach>
    </update>
    <delete id="clearExpiredMessages" >
        delete from message where  #{time,jdbcType=TIMESTAMP} > `time`
    </delete>
</mapper>
