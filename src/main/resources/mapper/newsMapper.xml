<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性是名称空间，必须唯一 -->
<mapper namespace="com.edu.victor.Dao.NewsDao">
    <resultMap id="AppNewsPage" type="Page">
        <collection property="pageData" ofType="NewsDtoForApp" autoMapping="true">
        </collection>
    </resultMap>
    <resultMap id="WebNewsPage" type="Page">
        <collection property="pageData" ofType="NewsDtoForWeb" autoMapping="true">
        </collection>
    </resultMap>
    <insert id="addNews" parameterType="News">
        insert into news(title,content,publisher_id,publisher_name,image,brief)value (#{title},#{content},#{publisherId},#{publisherName},#{image},#{brief});
    </insert>
    <delete id="deleteNews">
        delete from news where id = #{id};
    </delete>
    <update id="updateNews" parameterType="News">
        update news <set>
        <if test="content != null">
            content = #{content},
        </if>
        <if test="title != null">
            title = #{title},
        </if>
        <if test="brief != null">
            brief = #{brief},
        </if>
        <if test="image != null">
            image = #{image}
        </if>
    </set>where id = #{id};
    </update>
    <select id="searchNewsForWebByPage" parameterType="Page" resultMap="WebNewsPage">
        select news.id,title,teacher.name as publisherName,`time` from news join teacher on publisher_id = teacher.id  order by `time` desc
    </select>
    <select id="searchNewsForAppByPage" parameterType="Page" resultMap="AppNewsPage">
        select news.id,title,teacher.name as publisherName,image,brief,`time` from news join teacher on publisher_id = teacher.id  order by `time` desc
    </select>
    <select id="getSpecificNews" resultType="News">
        select *  FROM news where id = #{id}
    </select>

</mapper>
